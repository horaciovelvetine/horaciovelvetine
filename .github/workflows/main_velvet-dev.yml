name: Build and deploy Node.js app to Azure Web App - velvet-dev

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '22.x'
          cache: 'npm'
      
      - name: npm install, build, and test
        run: |
          npm ci
          npm run build --if-present
          npm run test --if-present
      
      - name: Determine build output and prepare deployment
        run: |
          # Check what type of app this is
          if [ -f "next.config.js" ] || [ -f "next.config.mjs" ]; then
            echo "Next.js app detected"
            echo "BUILD_TYPE=nextjs" >> $GITHUB_ENV
          elif [ -d "dist" ]; then
            echo "Static build app detected (dist folder)"
            echo "BUILD_TYPE=static-dist" >> $GITHUB_ENV
          elif [ -d "build" ]; then
            echo "Static build app detected (build folder)"
            echo "BUILD_TYPE=static-build" >> $GITHUB_ENV
          else
            echo "Node.js app detected"
            echo "BUILD_TYPE=nodejs" >> $GITHUB_ENV
          fi
      
      - name: Prepare static app deployment (dist)
        if: env.BUILD_TYPE == 'static-dist'
        run: |
          # Add Azure web.config for client-side routing
          cat > dist/web.config << 'EOF'
          <?xml version="1.0"?>
          <configuration>
            <system.webServer>
              <rewrite>
                <rules>
                  <rule name="SPA Routes" stopProcessing="true">
                    <match url=".*" />
                    <conditions logicalGrouping="MatchAll">
                      <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="true" />
                      <add input="{REQUEST_FILENAME}" matchType="IsDirectory" negate="true" />
                    </conditions>
                    <action type="Rewrite" url="/index.html" />
                  </rule>
                </rules>
              </rewrite>
            </system.webServer>
          </configuration>
          EOF
      
      - name: Prepare static app deployment (build)
        if: env.BUILD_TYPE == 'static-build'
        run: |
          # Add Azure web.config for client-side routing
          cat > build/web.config << 'EOF'
          <?xml version="1.0"?>
          <configuration>
            <system.webServer>
              <rewrite>
                <rules>
                  <rule name="SPA Routes" stopProcessing="true">
                    <match url=".*" />
                    <conditions logicalGrouping="MatchAll">
                      <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="true" />
                      <add input="{REQUEST_FILENAME}" matchType="IsDirectory" negate="true" />
                    </conditions>
                    <action type="Rewrite" url="/index.html" />
                  </rule>
                </rules>
              </rewrite>
            </system.webServer>
          </configuration>
          EOF
      
      - name: Upload artifact (dist)
        if: env.BUILD_TYPE == 'static-dist'
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: dist/
      
      - name: Upload artifact (build)
        if: env.BUILD_TYPE == 'static-build'
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: build/
      
      - name: Upload artifact (Node.js)
        if: env.BUILD_TYPE == 'nodejs'
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: |
            .
            !node_modules
            !.git
            !.github
            !*.log
            !.env

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read
    
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app
      
      - name: List deployment contents
        run: |
          echo "=== Deployment package contents ==="
          ls -la
          if [ -f "package.json" ]; then
            echo "=== package.json found ==="
            cat package.json | grep -E '"scripts"|"main"|"start"' -A 5
          fi
          
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_49181555FCBE4A2E9EE7A6375802E18F }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_AE43D0399ACC49B5B0FA97287EACF3B1 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_4D88B5F9DCA548C3B9838F0E3EE6B0B0 }}
      
      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'velvet-dev'
          slot-name: 'Production'
          package: .
      
      - name: Verify deployment
        run: |
          echo "Deployment completed. Checking app status..."
          sleep 30  # Wait for deployment to propagate
          RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" https://velvet-dev.azurewebsites.net)
          if [ $RESPONSE -eq 200 ]; then
            echo "✅ Site is responding with HTTP 200"
          else
            echo "⚠️ Site returned HTTP $RESPONSE"
          fi